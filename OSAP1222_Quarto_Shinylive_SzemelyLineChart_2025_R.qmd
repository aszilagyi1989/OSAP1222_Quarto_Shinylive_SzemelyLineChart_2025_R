---
title: ""
format: html
filters: 
 - shinylive
---

```{shinylive-r}
#| standalone: true
#| viewerHeight: 800
library("shiny")
library("dplyr")
library("shinyWidgets")
library("plotly")
library("ggplot2")

if (FALSE) {
  library("munsell")
}


 ui <- fluidPage(
   titlePanel("Személyforgalom ki- és belépők száma 2025-ben"),
   sidebarLayout(
     sidebarPanel(
       uiOutput("bordercity"),
       uiOutput("year"),
       uiOutput("search")
     ),
     mainPanel(
       plotlyOutput("linechart")
     )
   )
 )


 server <- function(input, output) {

   output$bordercity <- renderUI({
     
      DATA <- read.csv("https://raw.githubusercontent.com/aszilagyi1989/OSAP1222_Quarto_Shinylive_SzemelyLineChart_2025_R/refs/heads/main/Data.csv", sep = ";", row.names = NULL)

     selectInput(
       "bordercity",
       "Határátkelőhely",
       choices = unique(DATA$MG05),
       selected = unique(DATA$MG05)[1]
       )

   })
   
   output$search <- renderUI({
     
     DATA <- read.csv("https://raw.githubusercontent.com/aszilagyi1989/OSAP1222_Quarto_Shinylive_SzemelyLineChart_2025_R/refs/heads/main/Data.csv", sep = ";", row.names = NULL)
    
    selectInput(
      "search", 
      "Keresés",
      choices = c("Összes állampolgárság", unique(DATA[DATA$MG05 == input$bordercity, "MG02"])), 
      selected = "Összes állampolgárság")
    
  })
  
  output$year <- renderUI({
    
    DATA <- read.csv("https://raw.githubusercontent.com/aszilagyi1989/OSAP1222_Quarto_Shinylive_SzemelyLineChart_2025_R/refs/heads/main/Data.csv", sep = ";", row.names = NULL)
    
    selectInput(
      "year", 
      "Év",
      choices = unique(DATA$TEV), 
      selected = "2025")
    
  })

  
   subsetted <- reactive({
     
     req(input$bordercity)
     req(input$search)
     req(input$year)

   
    DATA <- read.csv("https://raw.githubusercontent.com/aszilagyi1989/OSAP1222_Quarto_Shinylive_SzemelyLineChart_2025_R/refs/heads/main/Data.csv", sep = ";", row.names = NULL)

    DATA %>% filter(MG05 %in% input$bordercity)
#     
#     if (input$search != "Magyarország"){
# 
#       telepules_MAP %>% filter(MUTATO_FOCSOP_MEGNEV %in% input$focsop & MUTATO_MEGNEV %in% input$mutato & VON_IDO %in% input$year & Megyenev %in% input$search)
# 
#     }else{
#       
#       telepules_MAP %>% filter(MUTATO_FOCSOP_MEGNEV %in% input$focsop & MUTATO_MEGNEV %in% input$mutato & VON_IDO %in% input$year)
#       
#     }
# 
   })
  
  
  output$linechart <- renderPlotly({
    
     req(input$bordercity)
     req(input$search)
     req(input$year)
    
    # tryCatch({
      
      map <- ggplot(data = subsetted()) + geom_line(aes(x = MHO, y = GADC041))
      ggplotly(map) %>%
        layout(xaxis = list(autorange = TRUE),
               yaxis = list(autorange = TRUE))
      # 
      # },
      # error = function(error_message){
      #   
      #   NULL
      #   
      # })
     
  })



}

shinyApp(ui = ui, server = server)
```
